//===========================================================================
//
// Mancubus // Mario
//
//===========================================================================
class Mario : SmileyActor
{
	Default
	{
		Scale 2.0;
		Health 600;
		Radius 48;
		Height 64;
		Mass 1000;
		Speed 8;
		PainChance 80;
		Monster;
		+FLOORCLIP
		+BOSSDEATH
		SeeSound "fatso/sight";
		PainSound "fatso/pain";
		DeathSound "fatso/death";
		ActiveSound "fatso/active";
		Obituary "$OB_FATSO";
	}
	States
	{
	Spawn:
		FATT AB 15 A_Look;
		Loop;
	See:
		FATT BCDEFEDC 6 A_Chase;
		Loop;
	Missile:
		FATT G 20 A_MarioRaise;
		FATT H 10 BRIGHT A_MarioAttack(1);
		FATT IG 5 A_FaceTarget;
		FATT H 10 BRIGHT A_MarioAttack(2);
		FATT IG 5 A_FaceTarget;
		FATT H 10 BRIGHT A_MarioAttack(3);
		FATT IG 5 A_FaceTarget;
		Goto See;
	Pain:
		FATT J 3;
		FATT J 3 A_Pain;
		Goto See;
    Death:
		FATT K 0 A_Mirrorize();
		FATT K 6;
		FATT L 6 A_Scream;
		FATT M 6 A_NoBlocking;
		FATT NOPQRS 6;
		FATT T -1 A_BossDeath;
	    Stop;
	 Raise:
		FATT R 0 A_Metalization();
		FATT R 0 A_ResurrectSphere();
		FATT R 5;
		FATT QPONMLK 13;
		FATT K 0 A_UnMirrorize();
		Goto See;
	}
}

class MarioShot : Actor
{
	Default
	{
		Radius 6;
		Height 8;
		Speed 20;
		Damage 8;
		Projectile;
		+RANDOMIZE
		+ZDOOMTRANS
		RenderStyle "Add";
		Alpha 1;
		SeeSound "mario/attack";
		DeathSound "fatso/shotx";
	}
	States
	{
	Spawn:
		MANF AB 4 BRIGHT;
		Loop;
	Death:
		MISL B 8 BRIGHT;
		MISL C 6 BRIGHT;
		MISL D 4 BRIGHT;
		Stop;
	}
}

extend class Mario
{
	const FATSPREAD = 90./8;

	void A_MarioRaise()
	{
		A_FaceTarget();
		A_StartSound("fatso/raiseguns", CHAN_WEAPON);
	}

	//
	// Mancubus attack,
	// firing three missiles in three different directions?
	// Doesn't look like it.
	//
	
	void A_MarioAttack(int version)
	{
		class<Actor> spawntype = "MarioShot";
		
		if (version == 1 || version == 2)
		{
			if (target)
			{
				A_FaceTarget();
				
				// Change direction  to ...
				if (version == 1)
					Angle += FATSPREAD;
				else
					Angle -= FATSPREAD;
				
				SpawnMissile (target, spawntype);
				Actor missile = SpawnMissile (target, spawntype);
				if (missile)
				{
					if (version == 1)
						missile.Angle += FATSPREAD;
					else
						missile.Angle -= FATSPREAD;
					
					missile.VelFromAngle();
				}
			}
		}
		else if (version == 3)
		{
			if (target)
			{
				A_FaceTarget();
				Actor missile = SpawnMissile (target, spawntype);
				if (missile)
				{
					missile.Angle -= FATSPREAD/2;
					missile.VelFromAngle();
				}
				missile = SpawnMissile (target, spawntype);
				if (missile)
				{
					missile.Angle += FATSPREAD/2;
					missile.VelFromAngle();
				}
			}
		}
	}

}