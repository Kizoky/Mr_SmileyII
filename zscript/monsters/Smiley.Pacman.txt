//===========================================================================
//
// Lost Soul
//
//===========================================================================
class Pacc : SmileyActor
{
	Default
	{
		Health 100;
		Radius 16;
		Height 56;
		Mass 50;
		Speed 8;
		Damage 3;
		PainChance 256;
		Monster;
		+FLOAT +NOGRAVITY +MISSILEMORE +DONTFALL +NOICEDEATH +ZDOOMTRANS;
		AttackSound "skull/melee";
		PainSound "skull/pain";
		DeathSound "skull/death";
		ActiveSound "skull/active";
		RenderStyle "SoulTrans";
		Obituary "$OB_SKULL";
	}
	States
	{
	Spawn:
		SKUL AB 10 BRIGHT A_Look;
		Loop;
	See:
		SKUL AB 6 BRIGHT A_Chase;
		Loop;
	Missile:
		SKUL C 10 BRIGHT A_FaceTarget;
		SKUL D 4 BRIGHT A_PaccAttack();
		SKUL CD 4 BRIGHT;
		Goto Missile+2;
	Pain:
		SKUL E 3 BRIGHT;
		SKUL E 3 BRIGHT A_Pain;
		Goto See;
	Death:
		SKUL F 0 A_Mirrorize();
		SKUL F 6 BRIGHT;
		SKUL G 6 BRIGHT A_Scream;
		SKUL H 6 BRIGHT;
		SKUL I 6 BRIGHT A_NoBlocking;
		SKUL J 6;
		SKUL K 6;
		Stop;
	}
}

extend class Pacc
{
	const DEFSKULLSPEED = 20;
	
	void A_PaccAttack(double skullspeed = DEFSKULLSPEED)
	{		
		if (target == null) return;

		if (skullspeed <= 0) skullspeed = DEFSKULLSPEED;
		
		bSkullfly = true;
		A_StartSound(AttackSound, CHAN_VOICE);
		A_FaceTarget();
		
		let proj = SpawnMissile (target, "PaccHelper");
		if (proj)
		{
			let Helper = PaccHelper(proj);
			if (Helper)
			{
				Helper.thetarget = target;
				Helper.Paccman = self;
				Helper.vel.z = (target.pos.Z + target.Height/2 - pos.Z) / DistanceBySpeed(target, skullspeed);
			}
		}
		
		VelFromAngle(skullspeed);
		Vel.Z = (target.pos.Z + target.Height/2 - pos.Z) / DistanceBySpeed(target, skullspeed);
	}
	
}

class PaccPoint : actor
{
	actor Pacman;
	
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		SetXYZ(pos+(0,0,5));
	}
	
	override void Tick()
	{
		Super.Tick();
		if (Pacman)
		{
			if (Distance2D(Pacman) < 20)
			{
				A_StartSound("pacman/chomp", CHAN_AUTO);
				Destroy();
			}
				
			if (!Pacman.bSkullfly || Pacman.bKILLED)
				Destroy();
		}
	}
	
	Default
	{
		Radius 1;
		Height 1;
		+RIPPER
	}
	States
	{
	Spawn:
		PCMN A -1;
		Stop;
	}
}

class PaccHelper : FastProjectile
{
	actor Paccman, thetarget;
	
	override void Tick()
	{
		Super.Tick();
		if (Paccman && thetarget)
		{
			if (Distance2D(thetarget) > 77 && Distance2D(Paccman) > 60)
			{
				let WakaWaka = spawn("PaccPoint", pos);
				if (WakaWaka)
				{
					let PacPoint = PaccPoint(WakaWaka);
					if (PacPoint)
					{
						PacPoint.Pacman = Paccman;
					}
				}
			}
			else
				Destroy();
		}
	
	}
	Default
	{
		Speed 125;
		Radius 1;
		Height 1;
		Damage 0;
		+CANNOTPUSH
		+NOCLIP
		+NOINTERACTION
	}
	States
	{
	Spawn:
		TNT1 A 4;
		Loop;
	Death:
		TNT1 A 4;
		Stop;
	}
}