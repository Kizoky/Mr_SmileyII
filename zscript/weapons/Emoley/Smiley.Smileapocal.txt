class Smileapocal : Weapon
{
	double BeforeAddMana, OffsetFinish;
	override void Tick()
	{
		Super.Tick();
		if (!owner) return;
		
		BeforeAddMana += 0.1;
		if (BeforeAddMana >= 1.5)
		{
			owner.A_GiveInventory("EmoleyMana",1);
			BeforeAddMana = 0;
		}
	}

	action State TryConvert()
	{
		self.A_WeaponOffset(frandom(129,131), frandom(51,53), WOF_INTERPOLATE);

		FLineTraceData lineData;
		LineTrace(angle,1000,pitch, offsetz: height-25, data: LineData);
		VectorBeam.SpawnVectorBeam(Self.pos + (0,0,height-20), LineData.HitLocation, 2.0, "00a2e8", 2);

		let Emoleyy = Emoley(invoker.owner);

		if (LineData.HitType == TRACE_HitActor && 
			LineData.HitActor && 
			!LineData.HitActor.bKILLED && 
			!LineData.HitActor.bFRIENDLY && 
			LineData.HitActor.bISMONSTER)
		{
			//int requirement = (LineData.HitActor.Health / 1.5) - CountInv("EmoleyMana");

			//bool YesNoConv = (CountInv("EmoleyMana") < LineData.HitActor.Health / 1.5) ? true : false;
			//string req = YesNoConv ? String.Format("Required mana: %d", requirement) : "Monster is convertable!";
			//A_Print(req);

			Emoleyy.SmileapocalTarget = LineData.HitActor;
		}

		// Player is still firing, don't let the below execute
		if (player.cmd.buttons & BT_ATTACK) return ResolveState (null);

		Emoleyy.SmileapocalTarget = null;

		VectorBeam.SpawnVectorBeam(Self.pos + (0,0,height-20), LineData.HitLocation, 2.0, "ffffff", 2);
		if (LineData.HitType == TRACE_HitActor)
		{
			if (LineData.HitActor && 
				!LineData.HitActor.bKILLED && 
				!LineData.HitActor.bFRIENDLY && 
				LineData.HitActor.bISMONSTER)
			{
				// If enemy has too much health do not attempt to convert
				if (CountInv("EmoleyMana") < LineData.HitActor.Health / 1.5)
				{
					A_StartSound("emoley/nomana", CHAN_WEAPON);
					return resolveState("FireEndFail");
				}
				
				LineData.HitActor.bFRIENDLY = true;
				LineData.HitActor.A_StartSound("emoley/convertedunit", CHAN_BODY);
				A_StartSound("emoley/convertedunit", CHAN_WEAPON);
				
				let ally = SmileyActor(LineData.HitActor);
				if (ally)
				{
					ally.EmoleyAlly = true;
					ally.MyMaster = self;
				}
				
				actor flame = spawn("EmoleyFlame", LineData.HitActor.pos);
				if (flame)
				{
					let a = EmoleyFlame(flame);
					if (a)
					{
						a.owner = LineData.HitActor;
					}
				}
				
				self.A_GiveInventory("EmoleyMinions",1);
				self.A_TakeInventory("EmoleyMana",LineData.HitActor.Health);
				return resolveState("FireEnd");
			}
		}

		return ResolveState ("FireEndFail");
		return ResolveState (null);
	}

	Default
	{
		Weapon.Kickback 100;
		Decal "bulletchip";
		Weapon.SelectionOrder 1900;
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 20;
		Weapon.AmmoType "EmoleyMana";
		Obituary "$OB_MPPISTOL";
		+WEAPON.WIMPY_WEAPON;
		Tag "$TAG_PISTOL";
		Inventory.PickupMessage "Ya got the..Pistol?";
		Weapon.BobRangeX 0.2;
		Weapon.BobRangeY -0.8;
		Weapon.BobSpeed 1.4;
		Weapon.BobStyle "InverseSmooth";
	}
	States
	{
	Ready:
		EMO1 AAA 1
		{
			A_WeaponReady();
			//self.A_WeaponOffset(frandom(1,2), frandom(1,2), WOF_INTERPOLATE);
		}
		Loop;
	Deselect:
		EMO1 A 1 A_Lower();
		Loop;
	Select:
        EMO1 A 1 A_Raise();
		Loop;
	Fire:
		EMO1 D 0 Offset(121,23)
		{
			//SetPlayerProperty(0,1,PROP_FROZEN);
			//self.A_WeaponOffset(145, 55, WOF_INTERPOLATE);
		}
		Goto FireLoop;
	FireLoop:
		EMO1 D 1 TryConvert();
		Loop;
	FireEnd:
		EMO1 B 2 A_WeaponOffset(165, 59, WOF_INTERPOLATE);
		EMO1 B 2 A_WeaponOffset(151, 47, WOF_INTERPOLATE);
		EMO1 B 1 A_WeaponOffset(136, 33, WOF_INTERPOLATE);
		EMO1 B 1 A_WeaponOffset(142, 28, WOF_INTERPOLATE);
		EMO1 C 1 A_WeaponOffset(119, 14, WOF_INTERPOLATE);
		EMO1 C 1 A_WeaponOffset(141, 9, WOF_INTERPOLATE);
		EMO1 C 2 A_WeaponOffset(155, 8, WOF_INTERPOLATE);
		EMO1 C 2 A_WeaponOffset(167, 18, WOF_INTERPOLATE);
		EMO1 C 1 A_WeaponOffset(179, 34, WOF_INTERPOLATE);
		EMO1 C 1 A_WeaponOffset(186, 49, WOF_INTERPOLATE);
		EMO1 B 1 A_WeaponOffset(208, 57, WOF_INTERPOLATE);
		EMO1 B 1 A_WeaponOffset(209, 79, WOF_INTERPOLATE);
		EMO1 B 1 A_WeaponOffset(208, 98, WOF_INTERPOLATE);
		EMO1 B 1 A_WeaponOffset(209, 123, WOF_INTERPOLATE);
		EMO1 B 1 A_WeaponOffset(210, 142, WOF_INTERPOLATE);
		Goto Ready;
	FireEndFail:
		TNT1 A 0 { invoker.OffsetFinish = 0; }
		EMO1 CCCCCCCCCCCCCCCC 1
		{
			invoker.OffsetFinish += 7;
			self.A_WeaponOffset(145-invoker.OffsetFinish/2, 55+invoker.OffsetFinish, WOF_INTERPOLATE);
		}
		TNT1 A 0 { invoker.OffsetFinish = 0; }
		EMO1 AAAAAAAA 1
		{
			invoker.OffsetFinish += 8.5;
			self.A_WeaponOffset(100-invoker.OffsetFinish, 110-invoker.OffsetFinish, WOF_INTERPOLATE);
		}
		Goto Ready;
	Flash:
		TNT1 A 0 Bright A_Light2;
		TNT1 A 1 Bright A_Light1;
		Goto LightDone;
	Spawn:
		PIST A -1;
		Stop;
	}
}